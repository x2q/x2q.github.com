<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[x2q dot net]]></title>
  <link href="http://www.x2q.net/atom.xml" rel="self"/>
  <link href="http://www.x2q.net/"/>
  <updated>2013-09-10T17:15:39+02:00</updated>
  <id>http://www.x2q.net/</id>
  <author>
    <name><![CDATA[x2q]]></name>
    <email><![CDATA[x2q@x2q.net]]></email>
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Bank Identification Number (BIN) List]]></title>
    <link href="http://www.x2q.net/blog/2013/09/10/bank-identification-number-bin-list/"/>
    <updated>2013-09-10T14:28:00+02:00</updated>
    <id>http://www.x2q.net/blog/2013/09/10/bank-identification-number-bin-list</id>
    <content type="html"><![CDATA[<p>The first 6 digits of a credit card number are known as the <a href="http://en.wikipedia.org/wiki/Credit_card_number">Issuer
Identification Number (IIN)</a>, previously known as <a href="http://en.wikipedia.org/wiki/Credit_card_number">Bank Identification Number
(BIN)</a>. Merchants use the BIN or IIN information to identify the issuing
institution, country of origin, card type and other details.</p>

<p>For many year I&#8217;ve been wondering where to get the best Binlists, but they are
hard to get outside of the card scheme organizations, such as <a href="http://en.wikipedia.org/wiki/Visa_Inc.">Visa</a> or
<a href="http://en.wikipedia.org/wiki/MasterCard">MasterCard</a>. Mostly beacuse BINs are generally considered sensitive information
and is normally provided by merchant service providers, who normally are able
to supply monthly updated BIN number range tables for all cards (Visa,
MasterCard etc.) except for AMEX, Diners, JCB and Discover.</p>

<p>There are a lot free available binlists around, and just to mention a few:</p>

<ul>
<li><a href="http://en.wikipedia.org/wiki/List_of_Issuer_Identification_Numbers">Wikipedia has a List of Bank Identification Numbers</a></li>
<li><a href="http://elliottback.com/wp/bank-identification-number-bin-list/">A combined CSV of Mars Banks Base, The now-defunct Dumpz.biz, and Wikipedia from 2009</a></li>
<li><a href="https://www.google.com/fusiontables/DataSource?docid=1QQScVqT46tTQ18pyqls3WbwJ740ouzK_65C6cw">Google Fusion Table: Bank BIN List</a></li>
<li><a href="http://pastebin.com/qN3EeGZM">Pastebin with US Bin List</a></li>
</ul>


<p>Most of the freely available binlist are outdated and got low accuracy.</p>

<p>Recently I&#8217;ve started to use a free Binlist webservice called <a href="http://www.binlist.net/">binlist.net</a>,
which is a simple webservice where I&#8217;m able to get outdated BIN and
IIN-information. I made a few tests over the last few days with
<a href="http://www.binlist.net/">binlist.net</a> and it seems to be quite up to date and fairly good accuracy.</p>

<h2>Binlist.net code example</h2>

<p>It is really easy to use the binlist.net webservice. They offer 3 return
formats; XML, JSON and CSV.</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ curl -s http://www.binlist.net/json/400115 | json_pp
</span><span class='line'>{
</span><span class='line'>   "card_category" : "ELECTRON",
</span><span class='line'>   "card_type" : "",
</span><span class='line'>   "bank" : "BARCLAYS BANK PLC",
</span><span class='line'>   "country_name" : "UNITED KINGDOM",
</span><span class='line'>   "bin" : "400115",
</span><span class='line'>   "country_code" : "GB",
</span><span class='line'>   "brand" : "VISA"
</span><span class='line'>}</span></code></pre></td></tr></table></div></figure>


<p>Unfortunately there is no <a href="http://rubygems.org/">Ruby gem</a> or PHP library available as of today.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Howto: Install MariaDB on Debian 7/Wheezy]]></title>
    <link href="http://www.x2q.net/blog/2013/05/05/howto-install-mariadb-on-debian-7-slash-wheezy/"/>
    <updated>2013-05-05T10:04:00+02:00</updated>
    <id>http://www.x2q.net/blog/2013/05/05/howto-install-mariadb-on-debian-7-slash-wheezy</id>
    <content type="html"><![CDATA[<p><a href="http://www.mariadb.org">MariaDB</a> is a fork of <a href="http://www.mysql.com">MySQL</a>, which is true open source and community
maintained. MariaDB is a binary drop in <a href="https://kb.askmonty.org/en/mariadb-versus-mysql-compatibility/">replacement</a> for MySQL. It includes
the XtraDB storage engine as a replacement for InnoDB. Its lead developer is
<a href="http://askmonty.org/">Michael Widenius</a> (also known as &#8220;Monty&#8221;), the founder of MySQL.</p>

<p>Recently, many popular Linux distributions replaced MySQL with MariaDB as
default database server. Fedora <a href="http://fedoraproject.org/wiki/Features/ReplaceMySQLwithMariaDB">version => 19</a>, <a href="https://www.archlinux.org/news/mariadb-replaces-mysql-in-repositories/">Archlinux</a> and
<a href="http://www.zdnet.com/oracle-who-fedora-and-opensuse-will-replace-mysql-with-mariadb-7000010640/">OpenSuse</a>. Moreover Wikipedia <a href="http://www.zdnet.com/wikipedia-moving-from-mysql-to-mariadb-7000008912/">moved</a> to MariaDB and Mozilla <a href="http://blog.mozilla.org/it/2013/01/17/mysql-5-1-vs-mysql-5-5-floats-doubles-and-scientific-notation/">also uses</a> MariaDB.</p>

<p>Famous distributions often used in server environments such as Debian and
Centos have not replaced MySQL with MariaDB yet, but they&#8217;ll probaly soon
migrate as well.</p>

<h2>Why switch to MariaDB</h2>

<p>Well, MySQL development has basically stopped, since Oracle acquired MySQL,
whereas the MariaDB development is progessing at full speed.</p>

<p>Performance and licensing are the often the most predominant reasons to make a
switch from MySQL to MariaDB.</p>

<p>Regarding performance - here is what Wikipedia experienced, when they compared
MariaDB to the <a href="https://launchpad.net/mysqlatfacebook/51">Facebook fork of MySQL 5.1</a>.</p>

<blockquote><p>Many query types were 4-15% faster with MariaDB 5.5.30<br/>under production load, a few were 5% slower, and nothing<br/>appeared aberrant beyond those bounds.</p><footer><strong>Asher Feldman</strong> <cite><a href='http://blog.wikimedia.org/2013/04/22/wikipedia-adopts-mariadb/'>Wikipedia Adopts MariaDB</a></cite></footer></blockquote>


<h2>Install MariaDB on Debian Wheezy</h2>

<p>MariaDB packages are not yet available in official Debian repositories. MariaDB
provides repositories for almost every popular os here:</p>

<p><a href="https://downloads.mariadb.org/mariadb/repositories">https://downloads.mariadb.org/mariadb/repositories/</a></p>

<p>Add the following to your <code>/etc/apt/sources.list</code></p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>deb http://ftp.osuosl.org/pub/mariadb/repo/5.5/debian wheezy main</span></code></pre></td></tr></table></div></figure>


<p>and then</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>sudo apt-key adv --recv-keys --keyserver keyserver.ubuntu.com 0xcbcb082a1bb943db
</span><span class='line'>sudo apt-get update
</span><span class='line'>sudo apt-get install mariadb-server-5.5 libmysqlclient18=5.5.30-mariadb1~wheezy</span></code></pre></td></tr></table></div></figure>


<p>The <strong>libmysqlclient18=5.5.30-mariadb1~wheezy</strong> is needed as a work-around to this
<a href="https://mariadb.atlassian.net/browse/MDEV-3882">bug</a>.</p>

<p>This should result is something like this&#8230;</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>Reading package lists... Done
</span><span class='line'>Building dependency tree       
</span><span class='line'>Reading state information... Done
</span><span class='line'>The following extra packages will be installed:
</span><span class='line'>  libaio1 libdbd-mysql-perl libdbi-perl libhtml-template-perl libmariadbclient18 libnet-daemon-perl libplrpc-perl mariadb-client-5.5
</span><span class='line'>  mariadb-client-core-5.5 mariadb-common mariadb-server-core-5.5 mysql-common psmisc
</span><span class='line'>Suggested packages:
</span><span class='line'>  libipc-sharedcache-perl tinyca mailx mariadb-test
</span><span class='line'>The following NEW packages will be installed:
</span><span class='line'>  libaio1 libdbd-mysql-perl libdbi-perl libhtml-template-perl libmariadbclient18 libmysqlclient18 libnet-daemon-perl libplrpc-perl
</span><span class='line'>  mariadb-client-5.5 mariadb-client-core-5.5 mariadb-common mariadb-server-5.5 mariadb-server-core-5.5 mysql-common psmisc
</span><span class='line'>0 upgraded, 15 newly installed, 0 to remove and 0 not upgraded.
</span><span class='line'>Need to get 32.3 MB of archives.
</span><span class='line'>After this operation, 111 MB of additional disk space will be used.
</span><span class='line'>Do you want to continue [Y/n]? </span></code></pre></td></tr></table></div></figure>


<p>You are now ready to use MariaDB.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[OS X Performance Tweaks]]></title>
    <link href="http://www.x2q.net/blog/2013/04/30/os-x-performance-tweaks/"/>
    <updated>2013-04-30T15:17:00+02:00</updated>
    <id>http://www.x2q.net/blog/2013/04/30/os-x-performance-tweaks</id>
    <content type="html"><![CDATA[<h2>Update to Latest OS X</h2>

<p>Upgrade to the latest version of <a href="http://en.wikipedia.org/wiki/OS_X">OS X</a>.</p>

<p>If you are upgrading from Lion to Mountain Lion, then tere’s no need to visit a
store and fetch a box, and install a bunch of discs. Just click the Mac App
Store icon on your Mac. Buy OS X Mountain Lion. And your Mac does the rest.</p>

<p>Follow <a href="http://www.apple.com/osx/how-to-upgrade/">this Apple guide</a> for more info</p>

<h2>Clean System and User Caches etc. Using OnyX</h2>

<p>OnyX is an utility for Mac OS X which allows you to run system maintenance, to
configure some hidden parameters of the Finder, Dock, QuickTime, Safari, Mail,
iTunes, login window, Spotlight, and many of Apple’s applications, to delete
caches, to remove a certain number of files and folders that may become
cumbersome, and more.</p>

<p><a href="http://www.titanium.free.fr/downloadonyx.php">Download OnyZ</a> and install it.</p>

<h3>Clean System Cache</h3>

<p><img src="http://lh4.ggpht.com/-UtI1gD45gL4/UYASl6pUTSI/AAAAAAAAKSQ/hKX3FNoND74/onyx-clean-system-cache.png"></p>

<h3>Clean User Cache</h3>

<p><img src="http://lh6.ggpht.com/-Ez57KHodshU/UYASmdM0VXI/AAAAAAAAKSM/Z10IpU0lZrM/onyx-clean-user-cache.png"></p>

<h3>Clean Internet abd Network related Caches</h3>

<p><img src="http://lh3.ggpht.com/-_krLB-6KpBk/UYASk07Te8I/AAAAAAAAKSA/hKUXRU9fxDU/onyx-clean-internet-cache.png"></p>

<h3>Empty Log Files</h3>

<p><img src="http://lh3.ggpht.com/-LjFz1T_zKVE/UYASlLliihI/AAAAAAAAKR8/Mi4g6SIloA4/onyx-clean-logs.png"></p>

<h3>Clean Misc OS X Stuff</h3>

<p><img src="http://lh5.ggpht.com/-URfbkUyR3w8/UYASlHQQpHI/AAAAAAAAKSE/JxsQBW88JJw/onyx-clean-misc.png"></p>

<h3>Empty Trash For All Users</h3>

<p><img src="http://lh4.ggpht.com/-UyQXcP4qnYg/UYASmih5GoI/AAAAAAAAKSU/_deQQsMs54I/onyx-empty-trash-all-users.png"></p>

<h2>Remove Startup Items in System Preferences</h2>

<p>If you are tired of applications launching automatically when you start your Mac, then you can
actually remove those Startup items from launching and slow down your performance.</p>

<p>Startup items are quite easy to remove with a few clicks and tweaks in the System Preferences.</p>

<p>Navigate to <code>System Preferences</code> > <code>Users &amp; Groups</code>. Now select you click your username, and then click on the <code>Login Items</code> tab.</p>

<p>Here you are able to see all items launched at startup.</p>

<p><img src="http://lh3.ggpht.com/-bJZpXUJx0P4/UYAaSM5qThI/AAAAAAAAKS4/0wyvqbawh6s/os-x-login-items.png"></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Ubuntu: Optimize for speed]]></title>
    <link href="http://www.x2q.net/blog/2013/04/21/ubuntu-optimize-for-speed/"/>
    <updated>2013-04-21T21:20:00+02:00</updated>
    <id>http://www.x2q.net/blog/2013/04/21/ubuntu-optimize-for-speed</id>
    <content type="html"><![CDATA[<p>This easy little guide will help you with simple optimization tips for speeding
up Ubuntu (12.04, 12.10, and 13.04) and other Ubuntu-based systems such as Linux
Mint. The tips come in very handy for those using older computers with low RAM
who need to boost their computer for better speed and performance and if you are
just want a really fast and snappy computer on some regular hardware.</p>

<h2>Removing Ubuntu One client</h2>

<p>Saves >100 MB ram.</p>

<p>The following steps can be followed to completely remove the Ubuntu One client
software.</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>killall ubuntuone-login ubuntuone-preferences ubuntuone-syncdaemon
</span><span class='line'>sudo rm -rf ~/.local/share/ubuntuone
</span><span class='line'>rm -rf ~/.cache/ubuntuone
</span><span class='line'>rm -rf ~/.config/ubuntuone
</span><span class='line'>rm ~/Ubuntu\ One</span></code></pre></td></tr></table></div></figure>




<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>sudo apt-get purge ubuntuone-client python-ubuntuone-storage*</span></code></pre></td></tr></table></div></figure>


<h2>Remove unused Unity lenses</h2>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>sudo apt-get purge \
</span><span class='line'>unity-lens-friends \
</span><span class='line'>unity-lens-music \
</span><span class='line'>unity-lens-photos \
</span><span class='line'>unity-lens-shopping \
</span><span class='line'>unity-lens-video \
</span><span class='line'>unity-lens-radios</span></code></pre></td></tr></table></div></figure>


<h2>Optimize mount options</h2>

<p>Ubuntu use the relatime flag for updating file metadata when files are accessed.
All these updates involve writes to the disk. We can avoid this with the
<code>noatime</code> and <code>nodiratime</code> parameters. This means that access time to files and
directories won&#8217;t be tracked at all.</p>

<h2>Use tmpfs for /tmp and /var etc.</h2>

<p>Add a section like this tmpfs section to <code>/etc/fstab</code></p>

<div><script src='https://gist.github.com/5459544.js'></script>
<noscript><pre><code></code></pre></noscript></div>


<h2>Move browser cache to tmpfs</h2>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>rm -rf ~/.cache/google-chrome
</span><span class='line'>ln -s /tmp ~/.cache/google-chrome</span></code></pre></td></tr></table></div></figure>


<h2>Move browser profile to memory using Profile-sync-daemon</h2>

<p><a href="https://wiki.archlinux.org/index.php/Profile-sync-daemon">Profile-sync-daemon
(psd)</a> is a diminutive
pseudo-daemon designed to manage your browser&#8217;s profile in tmpfs and to
periodically sync it back to your physical disc (HDD/SSD). This is accomplished
via a symlinking step and an innovative use of rsync to maintain back-up and
synchronization between the two. One of the major design goals of psd is a
completely transparent user experience.</p>

<p>Running this daemon is beneficial for two reasons:
* Reduced wear to physical discs
* Speed</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>sudo add-apt-repository ppa:graysky/utils
</span><span class='line'>sudo apt-get update
</span><span class='line'>sudo apt-get install profile-sync-daemon</span></code></pre></td></tr></table></div></figure>


<p>Adjust <code>/etc/psd.conf</code> to match your setup and then restart the
Profile-sync-daemon. Your browser(s) needs to be closed before restart of the
Profile-sync-daemon.</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>sudo /etc/init.d/psd restart</span></code></pre></td></tr></table></div></figure>


<h2>Remove orphaned libraries</h2>

<p>Over time most Ubuntu/Debian installations acquire packages which are no longer
required - they&#8217;ve just been pulled in to satisfy dependencies of software
you&#8217;ve since removed - deborphan package is probably the simplest way to get rid
of orphaned and unused packages.</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>sudo apt-get install deborphan
</span><span class='line'>sudo apt-get remove --purge `deborphan`; sudo apt-get autoremove</span></code></pre></td></tr></table></div></figure>


<h2>Clean browsers cache etc and vacuum browser databases.</h2>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>sudo apt-get install bleachbit
</span><span class='line'>bleachbit -c `bleachbit -l | grep cache`
</span><span class='line'>bleachbit -c `bleachbit -l | grep tmp`
</span><span class='line'>bleachbit -c `bleachbit -l | grep vacuum`</span></code></pre></td></tr></table></div></figure>


<h2>Clean rotated log files</h2>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>sudo bleachbit -c system.rotated_logs</span></code></pre></td></tr></table></div></figure>


<h2>Clean temp and backup files</h2>

<p>First do a dry-run and check that everything is good to go.</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>bleachbit -p deepscan.*</span></code></pre></td></tr></table></div></figure>


<p>and then do the real one</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>bleachbit -c deepscan.*</span></code></pre></td></tr></table></div></figure>


<h2>Disable unnecessary services and applications</h2>

<p>Use BUM, which is a runlevel configuration tool with GUI that allows Ubuntu
users to edit and configure init services that are started when the system is
booting up or restarting. With this tool, you will be displayed with all
running and disabled services in which you can turn them on/off.</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>sudo apt-get install bum
</span><span class='line'>sudo bum</span></code></pre></td></tr></table></div></figure>


<p>To remove applications from startup go to <code>Dash</code> > and type <code>Startup Applications</code>.</p>

<p><img src="http://lh3.ggpht.com/-F4MJSlus31U/UXo8S6sRcKI/AAAAAAAAKRc/MbftYfyzMRo/ubuntu-startup-application-preferences.png"></p>

<p>Disable automatic startup of any services that are not needed (or even remove
the package completely).</p>

<h2>Increases performance using zRam</h2>

<p><a href="https://code.google.com/p/compcache/">zRam</a> is a module of the Linux kernel. It
was previously called “compcache”. zRam increases performance by avoiding paging
on disk and instead uses a compressed block device in RAM in which paging takes
place until it is necessary to use the swap space on the hard disk drive. Since
using RAM is faster than using disks, zRam allows Linux to make more use of RAM
when swapping/paging is required, especially on older computers with less RAM
installed.</p>

<p>FYI: <a href="http://www.chromestory.com/2013/03/google-enabling-zram-for-chrome-os-by-default/">Google uses zRAM for Chrome OS</a></p>

<p>Enable zRam on Ubuntu:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>sudo apt-get install zram-config</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Howto install memcached gem on Ubuntu/Debian]]></title>
    <link href="http://www.x2q.net/blog/2013/04/16/howto-install-memcached-gem-on-ubuntu-slash-debian/"/>
    <updated>2013-04-16T15:54:00+02:00</updated>
    <id>http://www.x2q.net/blog/2013/04/16/howto-install-memcached-gem-on-ubuntu-slash-debian</id>
    <content type="html"><![CDATA[<p>Memcached is a general-purpose distributed memory caching system used by many
sites around. It is often used to speed up dynamic database-driven websites by
caching data and objects in RAM to reduce the number of times an external data
source (such as a database or API) must be read. Memcached runs on Unix, Linux,
Windows and Mac OS X.</p>

<p>The <a href="http://rubygems.org/gems/memcached">memcached gem</a> requires the following
development libraries to be installed</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>sudo apt-get install libmemcached-dev libsasl2-dev</span></code></pre></td></tr></table></div></figure>


<p>and then</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>sudo gem install memcached</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Chrome Built-in User-Agent Switcher]]></title>
    <link href="http://www.x2q.net/blog/2013/04/10/chrome-built-in-user-agent-switcher/"/>
    <updated>2013-04-10T20:45:00+02:00</updated>
    <id>http://www.x2q.net/blog/2013/04/10/chrome-built-in-user-agent-switcher</id>
    <content type="html"><![CDATA[<p>You may need to quickly switch between user-agent strings on the fly - when
developing websites that need to work on both mobile browsers and desktop
browsers user-agent switcing is a must-have.</p>

<p>And some times you&#8217;ll expirence some archaic site blocking you because you&#8217;re
not using Netscape or Internet Explorer (in an ancient version e.g. version 6).</p>

<p>Chrome got a built-in user-agent switcher. All you need to do is to open the
developer tools panel (use <code>Ctrl+Shift+I</code> shortcut) and click the <code>wrench
button</code> (lower right corner) and click <code>Overrides</code>, and enable override user
agent and elect the browser or device you want to emulate and reload the page.</p>

<p>There is user-agent switchers and methods available for most browsers:</p>

<h2>Chrome</h2>

<ul>
<li><a href="http://spoofer-extension.appspot.com/">User-Agent Switcher for Chrome</a></li>
<li>Using the <code>--user-agent</code> command line argument</li>
</ul>


<h2>Safari</h2>

<ul>
<li><a href="http://www.dummies.com/how-to/content/how-to-activate-user-agent-switcher-in-safari.html">How to Activate User Agent Switcher in Safari</a></li>
</ul>


<h2>Firefox</h2>

<ul>
<li><a href="https://addons.mozilla.org/da/firefox/addon/user-agent-switcher/">User Agent Switcher</a></li>
<li><a href="http://askubuntu.com/questions/32903/manipulate-browser-and-os-identification-by-firefox">Manipulate browser and OS identification in Firefox using about:config</a></li>
</ul>


<h2>Internet Explorer</h2>

<ul>
<li><a href="http://www.enhanceie.com/ietoys/uapick.asp">UAPick User-Agent Switcher</a></li>
</ul>


<p>You can always check your current user agent string by visting e.g. <a href="http://whatsmyuseragent.com/">http://whatsmyuseragent.com/</a></p>

<p>My current user agent string is:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.31 (KHTML, like Gecko) Chrome/26.0.1410.63 Safari/537.31</span></code></pre></td></tr></table></div></figure>



]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Howto Install Office 2010 using Wine]]></title>
    <link href="http://www.x2q.net/blog/2013/04/10/howto-install-office-2010-using-wine/"/>
    <updated>2013-04-10T19:00:00+02:00</updated>
    <id>http://www.x2q.net/blog/2013/04/10/howto-install-office-2010-using-wine</id>
    <content type="html"><![CDATA[<p>Microsoft Office 2010 is the most recent version of the Microsoft Office
productivity suite. Formerly known as Office 14 in the initial stages of
its beta cycle, it was released to customers in 2010.</p>

<p>This howto assume that you got an ISO image of the installation media.</p>

<p>If you are on Debian/Ubuntu you can install wine, winetricks, and winbind using</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>sudo apt-get install wine1.5 winetricks winbind</span></code></pre></td></tr></table></div></figure>


<p>In order to install you&#8217;ll need the following native Microsoft Windows libraries (dll files)</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>WINEARCH=win32 winetricks riched20 winhttp</span></code></pre></td></tr></table></div></figure>


<p>Then mount and install</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>sudo mount -o loop -o unhide Microsoft-Office-2010.iso /mnt
</span><span class='line'>WINEARCH=win32 wine /mnt/setup.exe</span></code></pre></td></tr></table></div></figure>


<p>Test Excel</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>WINEARCH=win32 wine ~/.wine/drive_c/Program\ Files/Microsoft\ Office/Office14/EXCEL.EXE</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Howto Backup WD MyBook Live to Amazon S3 and Glacier]]></title>
    <link href="http://www.x2q.net/blog/2013/02/24/howto-backup-wd-mybook-live-to-amazon-s3-and-glacier/"/>
    <updated>2013-02-24T14:25:00+01:00</updated>
    <id>http://www.x2q.net/blog/2013/02/24/howto-backup-wd-mybook-live-to-amazon-s3-and-glacier</id>
    <content type="html"><![CDATA[<p>Recently I helped a <a href="http://www.winniemethmann.com/">photographer</a> to backup a large photo collection (several
terabytes) from a <a href="http://www.wdc.com/">Western Digital (WD)</a> personal NAS
MyBook Live.</p>

<p>The <a href="http://en.wikipedia.org/wiki/Western_Digital_My_Book">My Book Live Edition
NAS</a> was released by
Western Digital in 2011. They range in storage capacity from 1 to 4 TB. My Book
Live features a 1 GHz ARM processor, 256 MB of RAM, and 1000 Mbit/s ethernet
connectivity. Contrary to previous My Book Live versions it now features a
fully fledged <a href="http://www.debian.org/">Debian linux distribution</a>, whichs makes
the My Book Live easy to customize and adapt to different needs.</p>

<h2>Backup your My Book Live to Amazon S3 and Glacier</h2>

<p>This assumes that you got SSH access to your My Book Live. If you haven&#8217;t got
SSH, then do the following to enable SSH access.</p>

<h3>Enable SSH via hidden menu on WD My Book Live</h3>

<p>Go to <a href="http://mybooklive/UI/ssh">http://mybooklive/UI/ssh</a> (case sensitive)
replace &#8220;mybooklive&#8221; if you have renamed your My Book Live to something else,
or replace it with its IP address. It&#8217;s a hidden UI menu to enable SSH.</p>

<p>Now you are able to ssh to your My Book Live via
<a href="http://www.chiark.greenend.org.uk/~sgtatham/putty/">putty</a> or another ssh
client.</p>

<h3>Install the backup tool Duplicity etc.</h3>

<pre><code>  $ apt-get install python-boto duplicity util-linux trickle
</code></pre>

<p>I used the following Bash script as a cron job. The script features:</p>

<ul>
<li>exclusive locking using flock - ensures that only instance is actice at the time. This is useful, when your backup might run for several days.</li>
<li>bandwidth / upload limit using trickle.</li>
<li>custom temp and cache folders - this is required on a WD My Book Live as it got limited space on the root file system</li>
</ul>


<div><script src='https://gist.github.com/5024054.js'></script>
<noscript><pre><code></code></pre></noscript></div>


<p>Now it is time to make the script run every night. Edit your crontab:</p>

<pre><code>    $ crontab -e
</code></pre>

<p>Add the following line</p>

<pre><code>    # m h  dom mon dow   command 
    42  22  *   *   *    /root/wd-live-s3-backup.sh
</code></pre>

<p>Then be sure to check your log files and do restore to check that everything is
good.</p>

<h3>Adjust S3 lifecycle rule</h3>

<p>Amazon supports archiving of Amazon S3 Data to Amazon Glacier using lifecycle rules.</p>

<p>I use the following lifecycle rule for Amazon S3 and Glacier.</p>

<p><img src="http://lh3.ggpht.com/-9vxrov_LRmM/UXjf1037BII/AAAAAAAAKL4/tFJy90mQAjM/w677/s3-glacier-lifecycle-rules.png"></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Howto run Netflix on Ubuntu Linux]]></title>
    <link href="http://www.x2q.net/blog/2013/02/23/howto-run-netflix-on-ubuntu-linux/"/>
    <updated>2013-02-23T22:52:00+01:00</updated>
    <id>http://www.x2q.net/blog/2013/02/23/howto-run-netflix-on-ubuntu-linux</id>
    <content type="html"><![CDATA[<p>Netflix is finally working on Linux - not native, but with a patched Wine build,
you can now use Netflix under Linux.</p>

<p>For those who are not familiar with Netflix, it is an American provider of
on-demand Internet streaming media available to both North and South America,
the Caribbean, United Kingdom, Ireland, Sweden, Denmark, Norway, Finland.</p>

<h2>How to install</h2>

<pre><code>  $ sudo apt-add-repository ppa:ehoover/compholio
  $ sudo apt-get update
  $ sudo apt-get install netflix-desktop
</code></pre>

<p>The Netflix Desktop package installs all of the components necessary to run Netflix
Watch Instantly under Wine, including the Windows version of Mozilla Firefox and
Microsoft Silverlight v4. The package also includes some convience
settings to integrate Netflix into Firefox in such a way that everything feels
like a native application.</p>

<h2>Run Netflix</h2>

<p>You can launch the Netflix Desktop web app through desktop Dash menu.
The Netflix Desktop application runs in full screen, but you can exit full
screen mode by pressing F11 (just like any other browser).</p>

<h2>Use it for websites that require Silverlight / PlayReady DRM</h2>

<p>Start the Netflix Desktop web app and then press F11 (to exit full screen mode),
then press ALT + v and then the menu occurs, now enable the Menu Bar and
Navigation Toolbar.</p>

<p>Now you are able to navigate to
<a href="http://web.sldrm.video.msn.com/">http://web.sldrm.video.msn.com/</a> or
<a href="http://www.filmstriben.dk/">http://www.filmstriben.dk/</a>.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Howto use Amazon RDS from Heroku]]></title>
    <link href="http://www.x2q.net/blog/2013/01/31/howto-use-amazon-rds-from-heroku/"/>
    <updated>2013-01-31T15:29:00+01:00</updated>
    <id>http://www.x2q.net/blog/2013/01/31/howto-use-amazon-rds-from-heroku</id>
    <content type="html"><![CDATA[<p>Heroku is quite popular for lightweight webservice and like projects. Until
recently Heroku only offered PostgreSQL-based database backend providers, but now Heroku
offers a quite large range of database backend providers; among them Amazon RDS.</p>

<p>This is a short run-down on how I managed to get a Heroku-based application to
connect to a Amazon RDS-based database.</p>

<ul>
<li><p>Install the Amazon RDS command line tools</p>

<pre><code>$ sudo apt-get install rdscli
</code></pre></li>
<li><p>Create a AWS Credential File (~/.aws/AwsCredentials.properties)</p></li>
</ul>


<div><script src='https://gist.github.com/4690345.js'></script>
<noscript><pre><code>AWSAccessKeyId=&lt;your-access-key&gt;
AWSSecretKey=&lt;your-secret-key&gt;
</code></pre></noscript></div>


<ul>
<li><p>Create a RDS db in the us-east region (if not run in this region, Heroku isn&#8217;t able to connect to it)</p>

<pre><code> $ rds-create-db-instance --db-instance-identifier [name]\
   --allocated-storage 5 \
   --db-instance-class db.m1.small  \
   --engine MySQL5.1 \
   --master-username [user] \
   --master-user-password [pass] \
   --db-name [db-name] \
   --region us-east
   --headers \
   --aws-credential-file ~/.aws/AwsCredentials.properties
</code></pre></li>
<li><p>Now authorize access from your public ip to the Amazon RDS instance</p>

<pre><code> $ rds-authorize-db-security-group-ingress default --cidr-ip 87.1.1.1/32 \
 --aws-credential-file ~/.aws/AwsCredentials.properties
</code></pre></li>
<li><p>Test MySQL connectivy from your local machine to the Amazon RDS instance</p>

<pre><code> $ mysql -u root -p -h &lt;your-amazon-rds-hostname&gt;
</code></pre></li>
<li><p>Now authorize access from the Heroku ip group ranges to the Amazon RDS instance</p>

<pre><code> $ rds-authorize-db-security-group-ingress --db-security-group-name default \
 --ec2-security-group-name default --ec2-security-group-owner-id 098166147350 \
 --aws-credential-file ~/.aws/AwsCredentials.properties
</code></pre></li>
<li><p>Enabled the Amazon RDS plugin using the Heroku console toolbelt</p>

<pre><code>$ heroku addons:add amazon_rds url=mysql://&lt;user&gt;:&lt;pass&gt;@&lt;your-amazon-rds-hostname&gt;/&lt;db-name&gt;
</code></pre></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Howto Setup PDF Printer on Linux]]></title>
    <link href="http://www.x2q.net/blog/2013/01/30/howto-setup-pdf-printer-on-linux/"/>
    <updated>2013-01-30T10:10:00+01:00</updated>
    <id>http://www.x2q.net/blog/2013/01/30/howto-setup-pdf-printer-on-linux</id>
    <content type="html"><![CDATA[<p>Installing a pdf-printer on Windows is crap, but in Linux/Ubuntu/Debian it is quite easy.</p>

<pre><code>$ sudo apt-get install cups-pdf
</code></pre>

<p>Then restart your cups daemon</p>

<pre><code>$ sudo service cups restart
</code></pre>

<p>And you are ready to print to pdf files.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[RIP Aaron Swartz]]></title>
    <link href="http://www.x2q.net/blog/2013/01/14/rip-aaron-swartz/"/>
    <updated>2013-01-14T08:18:00+01:00</updated>
    <id>http://www.x2q.net/blog/2013/01/14/rip-aaron-swartz</id>
    <content type="html"><![CDATA[<p>It is sad to hear that Aaron decided to end his own life. He was a great inspiration.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Howto create a real multi-resolution favicon]]></title>
    <link href="http://www.x2q.net/blog/2013/01/13/howto-create-a-real-multi-resolution-favicon/"/>
    <updated>2013-01-13T19:41:00+01:00</updated>
    <id>http://www.x2q.net/blog/2013/01/13/howto-create-a-real-multi-resolution-favicon</id>
    <content type="html"><![CDATA[<p>Most favicons are created in a single resolution only, which by default is 16x16 pixels. This is often fine, but low resolution 16x16 favicons look pixelated when seen in some browsers and when used for bookmarking and application icons in e.g. IOS. Some browsers expects favicons in different sizes e.g. 16x16, 32x32, 48x48, 64x64, and 128x128.</p>

<p>Most browsers can deal with favicons. GIF, JPG, PNG formats, and Microsoft Icon format (.ico). The ico format is the for some reason the most used.</p>

<p>The good thing regarding ico files is that they are able to contain multiple images within a single ico file. We&#8217;ll now exploit this feature to make a favicon contain all for four favicon resolutions in a single favicon for maximum compability using <a href="http://www.gimp.org/">Gimp</a>.</p>

<ol>
<li>Open Gimp</li>
<li>Load a large resolution of the image you are about to make into a favicon. Minimum 128x128 pixels.</li>
<li>Make the image squared with the same pixel width and height. This can be done using Image->Canvas Size in the menu.</li>
<li>Now scale and save the image in each resolution (16x16, 32x32, 48x48, 64x64, and 128x128) as png.</li>
<li>Open the largest image png image e.g. the 128x128 png image and open the rest of the images using File->Open as layers</li>
<li>Now it is time to save a image as a ico file. Click File->Save as and type favicon.ico as file name. And you are done.</li>
</ol>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Fast Static Sites with Ruby on Heroku/Cedar]]></title>
    <link href="http://www.x2q.net/blog/2012/12/01/fast-static-sites-with-ruby-on-heroku-slash-cedar/"/>
    <updated>2012-12-01T09:43:00+01:00</updated>
    <id>http://www.x2q.net/blog/2012/12/01/fast-static-sites-with-ruby-on-heroku-slash-cedar</id>
    <content type="html"><![CDATA[<p>Recently I needed a simple and fast way for serving a basic static website.</p>

<p>I ended up with a simple Ruby and Rack/Thin-based application, suitable for deploying to Heroku. Which means more or less no maintenance and it supports SSL - which is good in this case. For even simpler free HTML cloud hosting check out GitHub Pages.</p>

<p>For SSL support <code>Rack::SslEnforcer</code> is used.</p>

<div><script src='https://gist.github.com/4181366.js'></script>
<noscript><pre><code>require 'rack/contrib/try_static'
require 'rack/ssl-enforcer'

if ENV['RACK_ENV'] == 'production'
  use Rack::SslEnforcer
end

use Rack::TryStatic,
    :root =&gt; &quot;public&quot;,
    :urls =&gt; %w[/],
    :try =&gt; ['.html', 'index.html', '/index.html']

run lambda { [404, {'Content-Type' =&gt; 'text/html'}, ['Not Found']]}
</code></pre></noscript></div>


<h2>Run it locally</h2>

<pre><code>$ rackup
</code></pre>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Pretty Printing XML with xmllint]]></title>
    <link href="http://www.x2q.net/blog/2012/11/20/pretty-printing-xml-with-xmllint/"/>
    <updated>2012-11-20T09:02:00+01:00</updated>
    <id>http://www.x2q.net/blog/2012/11/20/pretty-printing-xml-with-xmllint</id>
    <content type="html"><![CDATA[<p>Yesterday I was doing some tests towards Visa 3-D Secure test directory url, which responds in XML format.</p>

<pre><code>curl -s -X POST -d @vereq.xml --cert visa.crt \
--key visa.key https://dropit.3dsecure.net:8443/PIT/DS
</code></pre>

<p>The raw response looked like this:</p>

<pre><code>&lt;?xml version="1.0" encoding="UTF-8"?&gt;&lt;ThreeDSecure&gt;&lt;Message id="999"&gt;&lt;VERes&gt;&lt;version&gt;1.0.2&lt;/version&gt;&lt;CH&gt;&lt;enrolled&gt;Y&lt;/enrolled&gt;&lt;acctID&gt;A0fTY+pKUTs3A4AjhdYQ+g==&lt;/acctID&gt;&lt;/CH&gt;&lt;url&gt;https://dropit.3dsecure.net:9443/PIT/ACS&lt;/url&gt;&lt;protocol&gt;ThreeDSecure&lt;/protocol&gt;&lt;/VERes&gt;&lt;/Message&gt;&lt;/ThreeDSecure&gt;
</code></pre>

<p>I used xmllint to pretty print the raw response:</p>

<pre><code>xmllint -format veres.xml --output -
</code></pre>

<p>and the pretty printed looked like this:</p>

<pre><code>&lt;?xml version="1.0" encoding="UTF-8"?&gt;
&lt;ThreeDSecure&gt;
  &lt;Message id="999"&gt;
    &lt;VERes&gt;
      &lt;version&gt;1.0.2&lt;/version&gt;
      &lt;CH&gt;
        &lt;enrolled&gt;Y&lt;/enrolled&gt;
        &lt;acctID&gt;A0fTY+pKUTv+96d4nonZQA==&lt;/acctID&gt;
      &lt;/CH&gt;
      &lt;url&gt;https://dropit.3dsecure.net:9443/PIT/ACS&lt;/url&gt;
      &lt;protocol&gt;ThreeDSecure&lt;/protocol&gt;
    &lt;/VERes&gt;
  &lt;/Message&gt;
&lt;/ThreeDSecure&gt;
</code></pre>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Install R on Ubuntu]]></title>
    <link href="http://www.x2q.net/blog/2012/10/28/install-r-on-ubuntu/"/>
    <updated>2012-10-28T11:09:00+01:00</updated>
    <id>http://www.x2q.net/blog/2012/10/28/install-r-on-ubuntu</id>
    <content type="html"><![CDATA[<p>The statistical analysis and data mining package R is given its single
letter name quite difficult to find help for in Google.</p>

<h2>What is R</h2>

<p>R is an open source programming language and software environment for
statistical computing and graphics. The R language is widely used among
statisticians for developing statistical software and data analysis.</p>

<h2>How to Install R</h2>

<pre><code>sudo apt-get install r-base
</code></pre>

<h2>How to use R</h2>

<p>You can start R simply typing R (case sensitive) on your command line</p>

<pre><code>x2q@x2q:~$ R
</code></pre>

<h3>Examples</h3>

<pre><code>&gt; 2+2
[1] 4
&gt; x &lt;- c(1,2,3,4,5,6)
&gt; print(x)
[1] 1 2 3 4 5 6
&gt; y &lt;- x^2
&gt; print(y)
[1]  1  4  9 16 25 36
&gt; mean(y)
[1] 15.16667
&gt; summary(x)
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max.
   1.00    2.25    3.50    3.50    4.75    6.00
&gt; summary(y)
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max.
   1.00    5.25   12.50   15.17   22.75   36.00
</code></pre>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Mac OS X Drivers for the HP Color LaserJet 1600]]></title>
    <link href="http://www.x2q.net/blog/2012/10/23/mac-os-x-drivers-for-the-hp-color-laserjet-1600/"/>
    <updated>2012-10-23T14:21:00+02:00</updated>
    <id>http://www.x2q.net/blog/2012/10/23/mac-os-x-drivers-for-the-hp-color-laserjet-1600</id>
    <content type="html"><![CDATA[<p>Currently there is no a official driver available for the HP Color LaserJet 1600, however there is a simple work-around.</p>

<p>First download and install the <a href="http://support.apple.com/kb/DL907">HP Printer Drivers v.2.12 for OS X</a> - from Apple Support.</p>

<p>Next install the HP Color LaserJet 1600 using the &#8220;HP Color LaserJet 2600&#8221; from the dropdown list in the config section as the driver for the HP Color LaserJet 1600.</p>

<p>Confirmed to work for OS X Mountain Lion, OS X Lion and Mac OS X v10.6 Snow Leopard.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Howto: Install a Brother MFC-9970CDW on Ubuntu]]></title>
    <link href="http://www.x2q.net/blog/2012/10/22/howto-install-a-brother-mfc-9970cdw-on-ubuntu/"/>
    <updated>2012-10-22T13:41:00+02:00</updated>
    <id>http://www.x2q.net/blog/2012/10/22/howto-install-a-brother-mfc-9970cdw-on-ubuntu</id>
    <content type="html"><![CDATA[<p>I got a <a href="http://www.brother-usa.com/mfc/modeldetail.aspx?PRODUCTID=MFC9970CDW">Brother MFC-9970CDW</a> printer, a multifunction device with  wired/wireless network.</p>

<p>For unknown reasons the driver are not available in Ubuntu and as as user you are not able to find them using the printer configuration search tool.</p>

<p>Thereby you need to download the drivers yourself.</p>

<h2>Download Drivers</h2>

<p>Go to <a href="http://welcome.solutions.brother.com/bsc/public_s/id/linux/en/download_prn.html">Brother Linux Driver Downloads</a> and download the <code>LPR driver</code> and the <code>cupswrapper driver</code>.</p>

<h2>Install the Drivers</h2>

<pre><code>sudo mkdir /var/spool/lpd
sudo dpkg -i mfc9970cdwlpr-1.1.1-5.i386.deb
sudo dpkg -i mfc9970cdwcupswrapper-1.1.1-5.i386.deb 
</code></pre>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Howto: Install Adobe Air on Ubuntu]]></title>
    <link href="http://www.x2q.net/blog/2012/10/22/howto-install-adobe-air-on-ubuntu/"/>
    <updated>2012-10-22T12:18:00+02:00</updated>
    <id>http://www.x2q.net/blog/2012/10/22/howto-install-adobe-air-on-ubuntu</id>
    <content type="html"><![CDATA[<p>For some reason Adobe only supported Linux until Adobe AIR 2.6.</p>

<h2>Download Adobe Air</h2>

<p>Download Latest Version Air 2.6.0 For Linux <a href="http://airdownload.adobe.com/air/lin/download/2.6/AdobeAIRInstaller.bin">http://airdownload.adobe.com/air/lin/download/2.6/AdobeAIRInstaller.bin</a> (16,1 MB)</p>

<pre><code>wget http://airdownload.adobe.com/air/lin/download/2.6/AdobeAIRInstaller.bin
</code></pre>

<h2>Install ia32-libs</h2>

<p>The ia32-libs 32bit crap is needed if you want to run this in 64-bit Ubuntu.</p>

<pre><code>sudo apt-get install ia32-libs
</code></pre>

<h2>Install Adobe Air</h2>

<pre><code>chmod +x AdobeAIRInstaller.bin
sudo ./AdobeAIRInstaller.bin
</code></pre>

<p>You might get an error saying:</p>

<blockquote><p>&#8220;Sorry, an error has occured. Adobe AIR could not be installed. Install either Gnome Keyring or KDE KWallet before installing Adobe AIR.</p></blockquote>


<p>Then you need to link a few files:</p>

<h3>Locate libgnome-keyring.so</h3>

<pre><code>locate libgnome-keyring.so
(my result, yours might differ)
/usr/lib/i386-linux-gnu/libgnome-keyring.so.0
/usr/lib/i386-linux-gnu/libgnome-keyring.so.0.2.0
/usr/lib/x86_64-linux-gnu/libgnome-keyring.so.0
/usr/lib/x86_64-linux-gnu/libgnome-keyring.so.0.2.0
</code></pre>

<h3>Create a symbolic link to your location you found using the locate command:</h3>

<pre><code>sudo ln -s /usr/lib/x86_64-linux-gnu/libgnome-keyring.so.0 /usr/lib/libgnome-keyring.so.0
</code></pre>

<h3>Retry install</h3>

<pre><code>chmod +x AdobeAIRInstaller.bin                                              
sudo ./AdobeAIRInstaller.bin 
</code></pre>

<h3>Remove symbolic links after installation of Adobe AIR 2.6.0</h3>

<pre><code>sudo rm /usr/lib/libgnome-keyring.so.0
</code></pre>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Ubuntu 12.10 Review: Nearly perfect]]></title>
    <link href="http://www.x2q.net/blog/2012/10/16/ubuntu-12-dot-10-review-nearly-perfect/"/>
    <updated>2012-10-16T12:17:00+02:00</updated>
    <id>http://www.x2q.net/blog/2012/10/16/ubuntu-12-dot-10-review-nearly-perfect</id>
    <content type="html"><![CDATA[<p>When I last upgraded to <a href="http://www.ubuntu.com/">Ubuntu 12.04</a>, I was quite disappointed. Mostly because it was a LTS release and though you do not expect buggy and unpolished components.</p>

<p>Back to Ubuntu 12.10.</p>

<h2>Installation</h2>

<p>The installation is simple and for the first time ever my girlfriend was able to install Ubuntu without my support. During the installation she even mentioned that is was incredible easy and straight forward.</p>

<p>The best thing about the installation is the fact that you don&#8217;t waste time during the installation process. The installer simply starts the installation right after you&#8217;ve chosen the partition scheme and then while it installs you are asked for additional user details, username, password, timezone etc.</p>

<p>All in all quite efficient and almost as polished as the Mac installer. And a lot faster than the Windows installer.</p>

<h2>Bootup &amp; Boot time</h2>

<p><span class='pullquote-right' data-pullquote='tested on a modern SSD I ended up with a boot time of ~10 seconds'>
Ubuntu 12.10 feels faster compared to Ubuntu 12.04. But in essence boot time shouldn&#8217;t be more than 5 seconds and Ubuntu 12.10 is still far from this, when using a regular disk drive, but when tested on a modern SSD I ended up with a boot time of ~10 seconds.
</span></p>

<p>Compared to Mac OS, Ubuntu still got a few flaws. For example random text messages occurs randomly during boot and shutdown from time to time. Not a problem as a such, but Mr. Jobs would never accepted a product release with this kind of unpolished user experience. Who said Apple Maps.</p>

<h2>The Desktop</h2>

<p>The overall look and feel is simply great, but the new sponsored items in the dash is simply annoying and leaves the desktop area as a cluttered space. However with the annoying sponsored Amazon content uninstalled the Ubuntu desktop is a pleasure. It is fast and quite responsive, don&#8217;t get me wrong there is still room for improvements.</p>

<p><img src="http://static.x2q.net/Ubuntu-12.10-Screenshot-2012-10-16-800x.jpg"></p>

<p>The annoying shopping unity lens can be removed by:</p>

<pre><code>sudo apt-get install unity-lens-shopping
</code></pre>

<p>The Mac inspired reworked <code>System Settings</code> is really a step in the right direction. It is pleasant to use, however why aren&#8217;t all configuration items shown, e.g. <code>Desktop Sharing</code>?</p>

<h2>Behind the Scenes</h2>

<p>Looking into the machine room with <code>ps aux</code> and <code>top</code> was a mixed experience.</p>

<pre><code>RSS     COMMAND
40m     /usr/bin/python /usr/lib/ubuntuone-client/ubuntuone-syncdaemon
30m     /usr/bin/python3 /usr/lib/unity-lens-photos/unity-lens-photos
19m     /usr/bin/python /usr/lib/unity-scope-video-remote/unity-scope-video-remote
16m     /usr/bin/python /usr/lib/unity-lens-video/unity-lens-video
13m     update-notifier
 8m     /usr/lib/evolution/evolution-source-registry
 7m     /usr/lib/gwibber/unity-gwibber-daemon
 4m     /usr/lib/x86_64-linux-gnu/deja-dup/deja-dup-monitor
</code></pre>

<p>All in all there is a lot processes - most of them are needed, but a significant number of the processes are simply not needed. The ubuntuone-syncdaemon is running even when it is not configured yet and the same for the deja-dup-monitor.</p>

<p>The update-notifier is running constantly. Personally, I think that the unity-lenses are consuming quite a bit memory, even though memory is cheap today.</p>

<h2>Conclusion</h2>

<p>Ubuntu 12.10 is yet another step in the right direction. It is nearly perfect, when the cluttered sponsor content unity-lenses, misc memory hungry processes, and processes slowing bootup are uninstalled.</p>
]]></content>
  </entry>
  
</feed>
