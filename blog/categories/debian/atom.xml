<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Debian | x2q dot net]]></title>
  <link href="http://www.x2q.net/blog/categories/debian/atom.xml" rel="self"/>
  <link href="http://www.x2q.net/"/>
  <updated>2013-04-16T16:06:15+02:00</updated>
  <id>http://www.x2q.net/</id>
  <author>
    <name><![CDATA[x2q]]></name>
    <email><![CDATA[x2q@x2q.net]]></email>
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Howto install memcached gem on Ubuntu/Debian]]></title>
    <link href="http://www.x2q.net/blog/2013/04/16/howto-install-memcached-gem-on-ubuntu-slash-debian/"/>
    <updated>2013-04-16T15:54:00+02:00</updated>
    <id>http://www.x2q.net/blog/2013/04/16/howto-install-memcached-gem-on-ubuntu-slash-debian</id>
    <content type="html"><![CDATA[<p>Memcached is a general-purpose distributed memory caching system used by many
sites around. It is often used to speed up dynamic database-driven websites by
caching data and objects in RAM to reduce the number of times an external data
source (such as a database or API) must be read. Memcached runs on Unix, Linux,
Windows and Mac OS X.</p>

<p>The <a href="http://rubygems.org/gems/memcached">memcached gem</a> requires the following
development libraries to be installed</p>

<p><code>
sudo apt-get install libmemcached-dev libsasl2-dev
</code></p>

<p>and then</p>

<p><code>
sudo gem install memcached
</code></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Howto Install Office 2010 using Wine]]></title>
    <link href="http://www.x2q.net/blog/2013/04/10/howto-install-office-2010-using-wine/"/>
    <updated>2013-04-10T19:00:00+02:00</updated>
    <id>http://www.x2q.net/blog/2013/04/10/howto-install-office-2010-using-wine</id>
    <content type="html"><![CDATA[<p>Microsoft Office 2010 is the most recent version of the Microsoft Office
productivity suite. Formerly known as Office 14 in the initial stages of
its beta cycle, it was released to customers in 2010.</p>

<p>This howto assume that you got an ISO image of the installation media.</p>

<p>If you are on Debian/Ubuntu you can install wine, winetricks, and winbind using
<code>
sudo apt-get install wine1.5 winetricks winbind
</code></p>

<p>In order to install you'll need the following native Microsoft Windows libraries (dll files)
<code>
WINEARCH=win32 winetricks riched20 winhttp
</code></p>

<p>Then mount and install
<code>
sudo mount -o loop -o unhide Microsoft-Office-2010.iso /mnt
WINEARCH=win32 wine /mnt/setup.exe
</code></p>

<p>Test Excel
<code>
WINEARCH=win32 wine ~/.wine/drive_c/Program\ Files/Microsoft\ Office/Office14/EXCEL.EXE
</code></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Howto Backup WD MyBook Live to Amazon S3 and Glacier]]></title>
    <link href="http://www.x2q.net/blog/2013/02/24/howto-backup-wd-mybook-live-to-amazon-s3-and-glacier/"/>
    <updated>2013-02-24T14:25:00+01:00</updated>
    <id>http://www.x2q.net/blog/2013/02/24/howto-backup-wd-mybook-live-to-amazon-s3-and-glacier</id>
    <content type="html"><![CDATA[<p>Recently I helped a <a href="http://www.winniemethmann.com/">photographer</a> to backup a large photo collection (several
terabytes) from a <a href="http://www.wdc.com/">Western Digital (WD)</a> personal NAS
MyBook Live.</p>

<p>The <a href="http://en.wikipedia.org/wiki/Western_Digital_My_Book">My Book Live Edition
NAS</a> was released by
Western Digital in 2011. They range in storage capacity from 1 to 4 TB. My Book
Live features a 1 GHz ARM processor, 256 MB of RAM, and 1000 Mbit/s ethernet
connectivity. Contrary to previous My Book Live versions it now features a
fully fledged <a href="http://www.debian.org/">Debian linux distribution</a>, whichs makes
the My Book Live easy to customize and adapt to different needs.</p>

<h2>Backup your My Book Live to Amazon S3 and Glacier</h2>

<p>This assumes that you got SSH access to your My Book Live. If you haven't got
SSH, then do the following to enable SSH access.</p>

<h3>Enable SSH via hidden menu on WD My Book Live</h3>

<p>Go to <a href="http://mybooklive/UI/ssh">http://mybooklive/UI/ssh</a> (case sensitive)
replace "mybooklive" if you have renamed your My Book Live to something else,
or replace it with its IP address. It's a hidden UI menu to enable SSH.</p>

<p>Now you are able to ssh to your My Book Live via
<a href="http://www.chiark.greenend.org.uk/~sgtatham/putty/">putty</a> or another ssh
client.</p>

<h3>Install the backup tool Duplicity etc.</h3>

<pre><code>  $ apt-get install python-boto duplicity util-linux trickle
</code></pre>

<p>I used the following Bash script as a cron job. The script features:</p>

<ul>
<li>exclusive locking using flock - ensures that only instance is actice at the time. This is useful, when your backup might run for several days.</li>
<li>bandwidth / upload limit using trickle.</li>
<li>custom temp and cache folders - this is required on a WD My Book Live as it got limited space on the root file system</li>
</ul>


<p><div><script src='https://gist.github.com/5024054.js'></script>
<noscript><pre><code></code></pre></noscript></div>
</p>

<p>Now it is time to make the script run every night. Edit your crontab:</p>

<pre><code>    $ crontab -e
</code></pre>

<p>Add the following line</p>

<pre><code>    # m h  dom mon dow   command 
    42  22  *   *   *    /root/wd-live-s3-backup.sh
</code></pre>

<p>Then be sure to check your log files and do restore to check that everything is
good.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Howto run Netflix on Ubuntu Linux]]></title>
    <link href="http://www.x2q.net/blog/2013/02/23/howto-run-netflix-on-ubuntu-linux/"/>
    <updated>2013-02-23T22:52:00+01:00</updated>
    <id>http://www.x2q.net/blog/2013/02/23/howto-run-netflix-on-ubuntu-linux</id>
    <content type="html"><![CDATA[<p>Netflix is finally working on Linux - not native, but with a patched Wine build,
you can now use Netflix under Linux.</p>

<p>For those who are not familiar with Netflix, it is an American provider of
on-demand Internet streaming media available to both North and South America,
the Caribbean, United Kingdom, Ireland, Sweden, Denmark, Norway, Finland.</p>

<h2>How to install</h2>

<pre><code>  $ sudo apt-add-repository ppa:ehoover/compholio
  $ sudo apt-get update
  $ sudo apt-get install netflix-desktop
</code></pre>

<p>The Netflix Desktop package installs all of the components necessary to run Netflix
Watch Instantly under Wine, including the Windows version of Mozilla Firefox and
Microsoft Silverlight v4. The package also includes some convience
settings to integrate Netflix into Firefox in such a way that everything feels
like a native application.</p>

<h2>Run Netflix</h2>

<p>You can launch the Netflix Desktop web app through desktop Dash menu.
The Netflix Desktop application runs in full screen, but you can exit full
screen mode by pressing F11 (just like any other browser).</p>

<h2>Use it for websites that require Silverlight / PlayReady DRM</h2>

<p>Start the Netflix Desktop web app and then press F11 (to exit full screen mode),
then press ALT + v and then the menu occurs, now enable the Menu Bar and
Navigation Toolbar.</p>

<p>Now you are able to navigate to
<a href="http://web.sldrm.video.msn.com/">http://web.sldrm.video.msn.com/</a> or
<a href="http://www.filmstriben.dk/">http://www.filmstriben.dk/</a>.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Howto use Amazon RDS from Heroku]]></title>
    <link href="http://www.x2q.net/blog/2013/01/31/howto-use-amazon-rds-from-heroku/"/>
    <updated>2013-01-31T15:29:00+01:00</updated>
    <id>http://www.x2q.net/blog/2013/01/31/howto-use-amazon-rds-from-heroku</id>
    <content type="html"><![CDATA[<p>Heroku is quite popular for lightweight webservice and like projects. Until
recently Heroku only offered PostgreSQL-based database backend providers, but now Heroku
offers a quite large range of database backend providers; among them Amazon RDS.</p>

<p>This is a short run-down on how I managed to get a Heroku-based application to
connect to a Amazon RDS-based database.</p>

<ul>
<li><p>Install the Amazon RDS command line tools</p>

<pre><code>$ sudo apt-get install rdscli
</code></pre></li>
<li><p>Create a AWS Credential File (~/.aws/AwsCredentials.properties)</p></li>
</ul>


<p><div><script src='https://gist.github.com/4690345.js'></script>
<noscript><pre><code>AWSAccessKeyId=&lt;your-access-key&gt;
AWSSecretKey=&lt;your-secret-key&gt;
</code></pre></noscript></div>
</p>

<ul>
<li><p>Create a RDS db in the us-east region (if not run in this region, Heroku isn't able to connect to it)</p>

<pre><code> $ rds-create-db-instance --db-instance-identifier [name]\
   --allocated-storage 5 \
   --db-instance-class db.m1.small  \
   --engine MySQL5.1 \
   --master-username [user] \
   --master-user-password [pass] \
   --db-name [db-name] \
   --region us-east
   --headers \
   --aws-credential-file ~/.aws/AwsCredentials.properties
</code></pre></li>
<li><p>Now authorize access from your public ip to the Amazon RDS instance</p>

<pre><code> $ rds-authorize-db-security-group-ingress default --cidr-ip 87.1.1.1/32 \
 --aws-credential-file ~/.aws/AwsCredentials.properties
</code></pre></li>
<li><p>Test MySQL connectivy from your local machine to the Amazon RDS instance</p>

<pre><code> $ mysql -u root -p -h &lt;your-amazon-rds-hostname&gt;
</code></pre></li>
<li><p>Now authorize access from the Heroku ip group ranges to the Amazon RDS instance</p>

<pre><code> $ rds-authorize-db-security-group-ingress --db-security-group-name default \
 --ec2-security-group-name default --ec2-security-group-owner-id 098166147350 \
 --aws-credential-file ~/.aws/AwsCredentials.properties
</code></pre></li>
<li><p>Enabled the Amazon RDS plugin using the Heroku console toolbelt</p>

<pre><code>$ heroku addons:add amazon_rds url=mysql://&lt;user&gt;:&lt;pass&gt;@&lt;your-amazon-rds-hostname&gt;/&lt;db-name&gt;
</code></pre></li>
</ul>

]]></content>
  </entry>
  
</feed>
