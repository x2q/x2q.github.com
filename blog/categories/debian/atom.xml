<?xml version="1.0" encoding="utf-8"?> <feed xmlns="http://www.w3.org/2005/Atom"><title><![CDATA[Category: Debian | x2q dot net]]></title><link href="http://www.x2q.net/blog/categories/debian/atom.xml" rel="self"/><link href="http://www.x2q.net/"/> <updated>2013-02-01T11:01:50+01:00</updated> <id>http://www.x2q.net/</id> <author> <name><![CDATA[x2q]]></name> <email><![CDATA[x2q@x2q.net]]></email> </author> <generator uri="http://octopress.org/">Octopress</generator> <entry><title type="html"><![CDATA[Howto use Amazon RDS from Heroku]]></title><link href="http://www.x2q.net/blog/2013/01/31/howto-use-amazon-rds-from-heroku/"/> <updated>2013-01-31T15:29:00+01:00</updated> <id>http://www.x2q.net/blog/2013/01/31/howto-use-amazon-rds-from-heroku</id> <content type="html"><![CDATA[<p>Heroku is quite popular for lightweight webservice and like projects. Until recently Heroku only offered PostgreSQL-based database backend providers, but now Heroku offers a quite large range of database backend providers; among them Amazon RDS.</p><p>This is a short run-down on how I managed to get Heroku based application to connect to a Amazon RDS-based database.</p><ul><li><p>Install the Amazon RDS command line tools</p><pre><code>$ sudo apt-get install rdscli
</code></pre></li><li><p>Create a AWS Credential File (~/.aws/AwsCredentials.properties)</p></li></ul><p><div><script src='https://gist.github.com/4690345.js?file='></script><noscript><pre><code>AWSAccessKeyId=&lt;your-access-key&gt;
AWSSecretKey=&lt;your-secret-key&gt;
</code></pre></noscript></div></p><ul><li><p>Create a RDS db in the us-east region (if not run in this region, Heroku isn't able to connect to it)</p><pre><code> $ rds-create-db-instance --db-instance-identifier [name]\
   --allocated-storage 5 \
   --db-instance-class db.m1.small  \
   --engine MySQL5.1 \
   --master-username [user] \
   --master-user-password [pass] \
   --db-name [db-name] \
   --region us-east
   --headers \
   --aws-credential-file ~/.aws/AwsCredentials.properties
</code></pre></li><li><p>Now authorize access from your public ip to the Amazon RDS instance</p><pre><code> $ rds-authorize-db-security-group-ingress default --cidr-ip 87.1.1.1/32 \
 --aws-credential-file ~/.aws/AwsCredentials.properties
</code></pre></li><li><p>Test MySQL connectivy from your local machine to the Amazon RDS instance</p><pre><code> $ mysql -u root -p -h &lt;your-amazon-rds-hostname&gt;
</code></pre></li><li><p>Now authorize access from the Heroku ip group ranges to the Amazon RDS instance</p><pre><code> $ rds-authorize-db-security-group-ingress --db-security-group-name default \
 --ec2-security-group-name default --ec2-security-group-owner-id 098166147350 \
 --aws-credential-file ~/.aws/AwsCredentials.properties
</code></pre></li><li><p>Enabled the Amazon RDS plugin using the Heroku console toolbelt</p><pre><code>$ heroku addons:add amazon_rds url=mysql://&lt;user&gt;:&lt;pass&gt;@&lt;your-amazon-rds-hostname&gt;/&lt;db-name&gt;
</code></pre></li></ul>]]></content> </entry> <entry><title type="html"><![CDATA[Howto Setup PDF Printer on Linux]]></title><link href="http://www.x2q.net/blog/2013/01/30/howto-setup-pdf-printer-on-linux/"/> <updated>2013-01-30T10:10:00+01:00</updated> <id>http://www.x2q.net/blog/2013/01/30/howto-setup-pdf-printer-on-linux</id> <content type="html"><![CDATA[<p>Installing a pdf-printer on Windows is crap, but in Linux/Ubuntu/Debian it is quite easy.</p><pre><code>$ sudo apt-get install cups-pdf
</code></pre><p>Then restart your cups daemon</p><pre><code>$ sudo service cups restart
</code></pre><p>And you are ready to print to pdf files.</p> ]]></content> </entry> <entry><title type="html"><![CDATA[Install R on Ubuntu]]></title><link href="http://www.x2q.net/blog/2012/10/28/install-r-on-ubuntu/"/> <updated>2012-10-28T11:09:00+01:00</updated> <id>http://www.x2q.net/blog/2012/10/28/install-r-on-ubuntu</id> <content type="html"><![CDATA[<p>The statistical analysis and data mining package R is given its single letter name quite difficult to find help for in Google.</p><h2>What is R</h2><p>R is an open source programming language and software environment for statistical computing and graphics. The R language is widely used among statisticians for developing statistical software and data analysis.</p><h2>How to Install R</h2><pre><code>sudo apt-get install r-base
</code></pre><h2>How to use R</h2><p>You can start R simply typing R (case sensitive) on your command line</p><pre><code>x2q@x2q:~$ R
</code></pre><h3>Examples</h3><pre><code>&gt; 2+2
[1] 4
&gt; x &lt;- c(1,2,3,4,5,6)
&gt; print(x)
[1] 1 2 3 4 5 6
&gt; y &lt;- x^2
&gt; print(y)
[1]  1  4  9 16 25 36
&gt; mean(y)
[1] 15.16667
&gt; summary(x)
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max.
   1.00    2.25    3.50    3.50    4.75    6.00
&gt; summary(y)
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max.
   1.00    5.25   12.50   15.17   22.75   36.00
</code></pre>]]></content> </entry> <entry><title type="html"><![CDATA[Howto: Install a Brother MFC-9970CDW on Ubuntu]]></title><link href="http://www.x2q.net/blog/2012/10/22/howto-install-a-brother-mfc-9970cdw-on-ubuntu/"/> <updated>2012-10-22T13:41:00+02:00</updated> <id>http://www.x2q.net/blog/2012/10/22/howto-install-a-brother-mfc-9970cdw-on-ubuntu</id> <content type="html"><![CDATA[<p>I got a <a href="http://www.brother-usa.com/mfc/modeldetail.aspx?PRODUCTID=MFC9970CDW">Brother MFC-9970CDW</a> printer, a multifunction device with wired/wireless network.</p><p>For unknown reasons the driver are not available in Ubuntu and as as user you are not able to find them using the printer configuration search tool.</p><p>Thereby you need to download the drivers yourself.</p><h2>Download Drivers</h2><p>Go to <a href="http://welcome.solutions.brother.com/bsc/public_s/id/linux/en/download_prn.html">Brother Linux Driver Downloads</a> and download the <code>LPR driver</code> and the <code>cupswrapper driver</code>.</p><h2>Install the Drivers</h2><pre><code>sudo mkdir /var/spool/lpd
sudo dpkg -i mfc9970cdwlpr-1.1.1-5.i386.deb
sudo dpkg -i mfc9970cdwcupswrapper-1.1.1-5.i386.deb
</code></pre>]]></content> </entry> <entry><title type="html"><![CDATA[Howto: Install Adobe Air on Ubuntu]]></title><link href="http://www.x2q.net/blog/2012/10/22/howto-install-adobe-air-on-ubuntu/"/> <updated>2012-10-22T12:18:00+02:00</updated> <id>http://www.x2q.net/blog/2012/10/22/howto-install-adobe-air-on-ubuntu</id> <content type="html"><![CDATA[<p>For some reason Adobe only supported Linux until Adobe AIR 2.6.</p><h2>Download Adobe Air</h2><p>Download Latest Version Air 2.6.0 For Linux <a href="http://airdownload.adobe.com/air/lin/download/2.6/AdobeAIRInstaller.bin">http://airdownload.adobe.com/air/lin/download/2.6/AdobeAIRInstaller.bin</a> (16,1 MB)</p><pre><code>wget http://airdownload.adobe.com/air/lin/download/2.6/AdobeAIRInstaller.bin
</code></pre><h2>Install ia32-libs</h2><p>The ia32-libs 32bit crap is needed if you want to run this in 64-bit Ubuntu.</p><pre><code>sudo apt-get install ia32-libs
</code></pre><h2>Install Adobe Air</h2><pre><code>chmod +x AdobeAIRInstaller.bin
sudo ./AdobeAIRInstaller.bin
</code></pre><p>You might get an error saying:</p><p><blockquote><p>"Sorry, an error has occured. Adobe AIR could not be installed. Install either Gnome Keyring or KDE KWallet before installing Adobe AIR.</p></blockquote></p><p>Then you need to link a few files:</p><h3>Locate libgnome-keyring.so</h3><pre><code>locate libgnome-keyring.so
(my result, yours might differ)
/usr/lib/i386-linux-gnu/libgnome-keyring.so.0
/usr/lib/i386-linux-gnu/libgnome-keyring.so.0.2.0
/usr/lib/x86_64-linux-gnu/libgnome-keyring.so.0
/usr/lib/x86_64-linux-gnu/libgnome-keyring.so.0.2.0
</code></pre><h3>Create a symbolic link to your location you found using the locate command:</h3><pre><code>sudo ln -s /usr/lib/x86_64-linux-gnu/libgnome-keyring.so.0 /usr/lib/libgnome-keyring.so.0
</code></pre><h3>Retry install</h3><pre><code>chmod +x AdobeAIRInstaller.bin
sudo ./AdobeAIRInstaller.bin
</code></pre><h3>Remove symbolic links after installation of Adobe AIR 2.6.0</h3><pre><code>sudo rm /usr/lib/libgnome-keyring.so.0
</code></pre>]]></content> </entry> </feed>