<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Google Chrome | x2q dot net]]></title>
  <link href="http://www.x2q.net/blog/categories/google-chrome/atom.xml" rel="self"/>
  <link href="http://www.x2q.net/"/>
  <updated>2013-09-16T14:59:08+02:00</updated>
  <id>http://www.x2q.net/</id>
  <author>
    <name><![CDATA[x2q]]></name>
    <email><![CDATA[x2q@x2q.net]]></email>
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[How to use Google Speech API]]></title>
    <link href="http://www.x2q.net/blog/2013/09/16/how-to-use-google-speech-api/"/>
    <updated>2013-09-16T12:24:00+02:00</updated>
    <id>http://www.x2q.net/blog/2013/09/16/how-to-use-google-speech-api</id>
    <content type="html"><![CDATA[<p>I few years ago, Google embedded speech recognition into the <a href="http://www.google.com/chrome">Google
Chrome</a> and the <a href="http://www.chromium.org/">Chromium browser</a>. Both implementation uses a
hidden API, but anyone is able to access and utilize the API as a
Speech To Text service.</p>

<p>The following is a short outline on how to use the Google Speech API.</p>

<h2>Requirements</h2>

<ul>
<li>A <a href="https://xiph.org/flac/">FLAC</a> file that stores the recorded speech or a mp3 file</li>
<li><a href="http://curl.haxx.se/">Curl</a> installed (installed using e.g. <code>sudo apt-get install curl</code>)</li>
</ul>


<h2>Prepare the FLAC</h2>

<p>In case you got your audio stored in a mp3 file or another audio
format, then you'll need sox to convert the file to a FLAC file.</p>

<p>Here is the command line I used to convert the first 15 seconds of an
mp3 file into a FLAC file.</p>

<p><code>
sox ~/speech.mp3 speech.flac trim 0 15
</code></p>

<p>For some reason the Google Speech API only allows FLAC files upto 15
seconds.</p>

<h2>Query the Google Speech To Text API</h2>

<p><code>
curl -v -i -X POST -H "Content-Type:audio/x-flac; rate=16000" \
-T speech.flac \
"https://www.google.com/speech-api/v1/recognize?xjerr=1&amp;client=chromium&amp;lang=en-US&amp;maxresults=10&amp;pfilter=0&amp;xjerr=1"
</code></p>

<p>The result looks like this:</p>

<p>```
{
  "status":0,
  "id":"f2661df1f2661df1f2661df1f2661df1124-2",
  "hypotheses": [</p>

<pre><code>{ "utterance":"this is a test for speech recognition","confidence":0.7654833},
{ "utterance":"this is a fest for speech recognition"}
</code></pre>

<p>  ]
}
```</p>

<h3>Query Parameters</h3>

<p><code>-H "Content-Type:audio/x-flac; rate=16000"</code>
This tells the Speech API that we send a FLAC file with the bitrate of 16000 Hz.</p>

<p><code>-T speech.flac</code>
This attaches the content of the speech.flac file to the HTTP POST</p>

<p><code>client</code>
The client's name you're connecting from. For spoofing purposes,
let's use <code>chromium</code></p>

<p><code>lang</code>
Speech language, for example, <code>da-DK</code> for Danish, or <code>en-US</code>
for U.S. English</p>

<p><code>maxresults</code>
Maximum results to return for the utterance.</p>

<p><code>pfilter</code>
The porn filter ;-). Google (by default) censors the results, leading
to “Please search for ###” (pfilter!=0) instead of “Please search for
s e x” (pfilter=0).</p>

<p><code>xjerr</code>
Tell speech recognition server to return errors as part of the JSON
response and not HTTP error codes</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[OS X Performance Tweaks]]></title>
    <link href="http://www.x2q.net/blog/2013/04/30/os-x-performance-tweaks/"/>
    <updated>2013-04-30T15:17:00+02:00</updated>
    <id>http://www.x2q.net/blog/2013/04/30/os-x-performance-tweaks</id>
    <content type="html"><![CDATA[<h2>Update to Latest OS X</h2>

<p>Upgrade to the latest version of <a href="http://en.wikipedia.org/wiki/OS_X">OS X</a>.</p>

<p>If you are upgrading from Lion to Mountain Lion, then tere’s no need to visit a
store and fetch a box, and install a bunch of discs. Just click the Mac App
Store icon on your Mac. Buy OS X Mountain Lion. And your Mac does the rest.</p>

<p>Follow <a href="http://www.apple.com/osx/how-to-upgrade/">this Apple guide</a> for more info</p>

<h2>Clean System and User Caches etc. Using OnyX</h2>

<p>OnyX is an utility for Mac OS X which allows you to run system maintenance, to
configure some hidden parameters of the Finder, Dock, QuickTime, Safari, Mail,
iTunes, login window, Spotlight, and many of Apple’s applications, to delete
caches, to remove a certain number of files and folders that may become
cumbersome, and more.</p>

<p><a href="http://www.titanium.free.fr/downloadonyx.php">Download OnyZ</a> and install it.</p>

<h3>Clean System Cache</h3>

<p><img src="http://lh4.ggpht.com/-UtI1gD45gL4/UYASl6pUTSI/AAAAAAAAKSQ/hKX3FNoND74/onyx-clean-system-cache.png"></p>

<h3>Clean User Cache</h3>

<p><img src="http://lh6.ggpht.com/-Ez57KHodshU/UYASmdM0VXI/AAAAAAAAKSM/Z10IpU0lZrM/onyx-clean-user-cache.png"></p>

<h3>Clean Internet abd Network related Caches</h3>

<p><img src="http://lh3.ggpht.com/-_krLB-6KpBk/UYASk07Te8I/AAAAAAAAKSA/hKUXRU9fxDU/onyx-clean-internet-cache.png"></p>

<h3>Empty Log Files</h3>

<p><img src="http://lh3.ggpht.com/-LjFz1T_zKVE/UYASlLliihI/AAAAAAAAKR8/Mi4g6SIloA4/onyx-clean-logs.png"></p>

<h3>Clean Misc OS X Stuff</h3>

<p><img src="http://lh5.ggpht.com/-URfbkUyR3w8/UYASlHQQpHI/AAAAAAAAKSE/JxsQBW88JJw/onyx-clean-misc.png"></p>

<h3>Empty Trash For All Users</h3>

<p><img src="http://lh4.ggpht.com/-UyQXcP4qnYg/UYASmih5GoI/AAAAAAAAKSU/_deQQsMs54I/onyx-empty-trash-all-users.png"></p>

<h2>Remove Startup Items in System Preferences</h2>

<p>If you are tired of applications launching automatically when you start your Mac, then you can
actually remove those Startup items from launching and slow down your performance.</p>

<p>Startup items are quite easy to remove with a few clicks and tweaks in the System Preferences.</p>

<p>Navigate to <code>System Preferences</code> > <code>Users &amp; Groups</code>. Now select you click your username, and then click on the <code>Login Items</code> tab.</p>

<p>Here you are able to see all items launched at startup.</p>

<p><img src="http://lh3.ggpht.com/-bJZpXUJx0P4/UYAaSM5qThI/AAAAAAAAKS4/0wyvqbawh6s/os-x-login-items.png"></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Ubuntu: Optimize for speed]]></title>
    <link href="http://www.x2q.net/blog/2013/04/21/ubuntu-optimize-for-speed/"/>
    <updated>2013-04-21T21:20:00+02:00</updated>
    <id>http://www.x2q.net/blog/2013/04/21/ubuntu-optimize-for-speed</id>
    <content type="html"><![CDATA[<p>This easy little guide will help you with simple optimization tips for speeding
up Ubuntu (12.04, 12.10, and 13.04) and other Ubuntu-based systems such as Linux
Mint. The tips come in very handy for those using older computers with low RAM
who need to boost their computer for better speed and performance and if you are
just want a really fast and snappy computer on some regular hardware.</p>

<h2>Removing Ubuntu One client</h2>

<p>Saves >100 MB ram.</p>

<p>The following steps can be followed to completely remove the Ubuntu One client
software.</p>

<p><code>
killall ubuntuone-login ubuntuone-preferences ubuntuone-syncdaemon
sudo rm -rf ~/.local/share/ubuntuone
rm -rf ~/.cache/ubuntuone
rm -rf ~/.config/ubuntuone
rm ~/Ubuntu\ One
</code></p>

<p><code>
sudo apt-get purge ubuntuone-client python-ubuntuone-storage*
</code></p>

<h2>Remove unused Unity lenses</h2>

<p><code>
sudo apt-get purge \
unity-lens-friends \
unity-lens-music \
unity-lens-photos \
unity-lens-shopping \
unity-lens-video \
unity-lens-radios
</code></p>

<h2>Optimize mount options</h2>

<p>Ubuntu use the relatime flag for updating file metadata when files are accessed.
All these updates involve writes to the disk. We can avoid this with the
<code>noatime</code> and <code>nodiratime</code> parameters. This means that access time to files and
directories won't be tracked at all.</p>

<h2>Use tmpfs for /tmp and /var etc.</h2>

<p>Add a section like this tmpfs section to <code>/etc/fstab</code></p>

<p><div><script src='https://gist.github.com/5459544.js'></script>
<noscript><pre><code></code></pre></noscript></div>
</p>

<h2>Move browser cache to tmpfs</h2>

<p><code>
rm -rf ~/.cache/google-chrome
ln -s /tmp ~/.cache/google-chrome
</code></p>

<h2>Move browser profile to memory using Profile-sync-daemon</h2>

<p><a href="https://wiki.archlinux.org/index.php/Profile-sync-daemon">Profile-sync-daemon
(psd)</a> is a diminutive
pseudo-daemon designed to manage your browser's profile in tmpfs and to
periodically sync it back to your physical disc (HDD/SSD). This is accomplished
via a symlinking step and an innovative use of rsync to maintain back-up and
synchronization between the two. One of the major design goals of psd is a
completely transparent user experience.</p>

<p>Running this daemon is beneficial for two reasons:
* Reduced wear to physical discs
* Speed</p>

<p><code>
sudo add-apt-repository ppa:graysky/utils
sudo apt-get update
sudo apt-get install profile-sync-daemon
</code></p>

<p>Adjust <code>/etc/psd.conf</code> to match your setup and then restart the
Profile-sync-daemon. Your browser(s) needs to be closed before restart of the
Profile-sync-daemon.</p>

<p><code>
sudo /etc/init.d/psd restart
</code></p>

<h2>Remove orphaned libraries</h2>

<p>Over time most Ubuntu/Debian installations acquire packages which are no longer
required - they've just been pulled in to satisfy dependencies of software
you've since removed - deborphan package is probably the simplest way to get rid
of orphaned and unused packages.</p>

<p><code>
sudo apt-get install deborphan
sudo apt-get remove --purge `deborphan`; sudo apt-get autoremove
</code></p>

<h2>Clean browsers cache etc and vacuum browser databases.</h2>

<p><code>
sudo apt-get install bleachbit
bleachbit -c `bleachbit -l | grep cache`
bleachbit -c `bleachbit -l | grep tmp`
bleachbit -c `bleachbit -l | grep vacuum`
</code></p>

<h2>Clean rotated log files</h2>

<p><code>
sudo bleachbit -c system.rotated_logs
</code></p>

<h2>Clean temp and backup files</h2>

<p>First do a dry-run and check that everything is good to go.
<code>
bleachbit -p deepscan.*
</code></p>

<p>and then do the real one
<code>
bleachbit -c deepscan.*
</code></p>

<h2>Disable unnecessary services and applications</h2>

<p>Use BUM, which is a runlevel configuration tool with GUI that allows Ubuntu
users to edit and configure init services that are started when the system is
booting up or restarting. With this tool, you will be displayed with all
running and disabled services in which you can turn them on/off.</p>

<p><code>
sudo apt-get install bum
sudo bum
</code></p>

<p>To remove applications from startup go to <code>Dash</code> > and type <code>Startup Applications</code>.</p>

<p><img src="http://lh3.ggpht.com/-F4MJSlus31U/UXo8S6sRcKI/AAAAAAAAKRc/MbftYfyzMRo/ubuntu-startup-application-preferences.png"></p>

<p>Disable automatic startup of any services that are not needed (or even remove
the package completely).</p>

<h2>Increases performance using zRam</h2>

<p><a href="https://code.google.com/p/compcache/">zRam</a> is a module of the Linux kernel. It
was previously called “compcache”. zRam increases performance by avoiding paging
on disk and instead uses a compressed block device in RAM in which paging takes
place until it is necessary to use the swap space on the hard disk drive. Since
using RAM is faster than using disks, zRam allows Linux to make more use of RAM
when swapping/paging is required, especially on older computers with less RAM
installed.</p>

<p>FYI: <a href="http://www.chromestory.com/2013/03/google-enabling-zram-for-chrome-os-by-default/">Google uses zRAM for Chrome OS</a></p>

<p>Enable zRam on Ubuntu:</p>

<p><code>
sudo apt-get install zram-config
</code></p>
]]></content>
  </entry>
  
</feed>
